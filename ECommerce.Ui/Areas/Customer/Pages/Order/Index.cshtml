@page
@model ECommerce.Ui.Areas.Customer.Pages.Order.IndexModel
@using ECommerce.Utility;
@{
    ViewData["Title"] = "Orders";

    var status = HttpContext.Request.Query["status"];

    var all = "text-dark";
    var approved = "text-dark";
    var processing = "text-dark";
    var shipped = "text-dark";
    var completed = "text-dark";
    var cancelled = "text-dark";

    switch (status)
    {
        case SD.OrderStatus.APPROVED:
            approved = "active";
            break;
        case SD.OrderStatus.PROCESSING:
            processing = "active";
            break;
        case SD.OrderStatus.SHIPPED:
            shipped = "active";
            break;
        case SD.OrderStatus.COMPLETE:
            completed = "active";
            break;
        case SD.OrderStatus.CANCELLED:
            cancelled = "active";
            break;
        default:
            all = "active";
            break;
    }
}

<div class="border p-3">
    <div class="d-flex justify-content-between mb-3">
        <div class="p-2">
            <h2 class="text-primary">Orders</h2>
        </div>
        <div class="p-2">
            <ul class="list-group list-group-horizontal-sm">
                <a style="text-decoration: none" asp-page="./Index">
                    <li class="list-group-item rounded-0 @all">
                        All
                    </li>
                </a>
                <a style="text-decoration: none" asp-page="./Index" asp-route-status="@SD.OrderStatus.APPROVED">
                    <li class="list-group-item rounded-0 @approved">
                        Approved
                    </li>
                </a>
                <a style="text-decoration: none" asp-page="./Index" asp-route-status="@SD.OrderStatus.PROCESSING">
                    <li class="list-group-item rounded-0 @processing">
                        In Process
                    </li>
                </a>
                <a style="text-decoration: none" asp-page="./Index" asp-route-status="@SD.OrderStatus.SHIPPED">
                    <li class="list-group-item rounded-0 @shipped">
                        Shipped
                    </li>
                </a>
                <a style="text-decoration: none" asp-page="./Index" asp-route-status="@SD.OrderStatus.COMPLETE">
                    <li class="list-group-item rounded-0 @completed">
                        Completed
                    </li>
                </a>
                <a style="text-decoration: none" asp-page="./Index" asp-route-status="@SD.OrderStatus.CANCELLED">
                    <li class="list-group-item rounded-0 @cancelled">
                        Cancelled
                    </li>
                </a>
            </ul>
        </div>
    </div>

    <hr />

    <form method="get" asp-page="./Index">
        <input type="hidden" name="status" value="@Model.StatusFilter" />
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text bg-primary"><i class="fas fa-search text-white"></i></span>
            </div>
            <input name="searchString" type="text" class="form-control" placeholder="Search order ID" value="@Model.SearchTerm">
            <div class="input-group-append">
                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                {
                    <a asp-page="./Index" class="btn btn-danger">Clear</a>
                }
                <input type="submit" value="Search" class="btn btn-success" />
            </div>
        </div>
    </form>

    <table class="table table-striped table-bordered" style="width:100%">
        <thead class="thead-dark">
            <tr class="table-info">
                <th>ID</th>
                <th>Customer</th>
                <th>Phone Number</th>
                <th>Email</th>
                <th>Order Status</th>
                <th>Amount (RM)</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Orders.Count() > 0)
            {
                @foreach (var order in Model.Orders)
                {
                    <tr>
                        <td>
                            @order.Id
                        </td>
                        <td>
                            @order.Name
                        </td>
                        <td>
                            @order.PhoneNumber
                        </td>
                        <td>
                            @order.Email
                        </td>
                        <td>
                            @order.OrderStatus
                        </td>
                        <td>
                            @order.OrderTotal.ToString("N")
                        </td>
                        <td>
                            <div class="text-center">
                                <a class="btn btn-primary text-white" asp-page="./Details" asp-route-orderId="@order.Id" style="cursor:pointer">
                                    <i class="far fa-eye"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr class="bg-light text-center">
                    <td colspan="100%">
                        No orders found.
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (Model.Orders.Count() > 0 && Model.Orders.TotalPages > 1)
    {
        <div class="my-2">
            @{
                var prevDisabled = !Model.Orders.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.Orders.HasNextPage ? "disabled" : "";
            }
            <ul class="justify-content-center pagination">
                <li class="page-item @prevDisabled">
                    <a asp-page="./Index"
                       asp-route-pageIndex="@(Model.Orders.PageIndex - 1)"
                       asp-route-searchString="@Model.SearchTerm"
                       class="page-link bg-primary">
                        <span>&lt;</span>
                    </a>
                </li>
                <li class="page-item text-black">
                    <span class="page-link bg-primary">
                        @(Model.Orders.PageIndex) / @(Model.Orders.TotalPages)
                    </span>
                </li>
                <li class="page-item @nextDisabled">
                    <a asp-page="./Index"
                       asp-route-pageIndex="@(Model.Orders.PageIndex + 1)"
                       asp-route-searchString="@Model.SearchTerm"
                       class="page-link bg-primary">
                        <span>&gt;</span>
                    </a>
                </li>
            </ul>
        </div>
    }
</div>




